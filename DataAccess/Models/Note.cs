// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess.Models
{
    using Mapping;

    // Note
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Note : Infra.Wpf.Repository.ModelBase<Note>
    {

        ///<summary>
        /// جدول یادداشت ها
        ///</summary>
        [Column(@"NoteId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        public int NoteId { get { return Get<int>(); } set { Set(value); } } // NoteId (Primary key)

        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        public string Title { get { return Get<string>(); } set { Set(value); } } // Title (length: 50)

        [MaxLength(50)]
        [StringLength(50)]
        public string Description { get { return Get<string>(); } set { Set(value); } } // Description (length: 50)

        [Required]
        public int StatusId { get { return Get<int>(); } set { Set(value); } } // StatusId

        public int? NotificationId { get { return Get<int?>(); } set { Set(value); } } // NotificationId

        [Required]
        public System.DateTime CreateDate { get { return Get<System.DateTime>(); } set { Set(value); } } // CreateDate

        [Required]
        public int UserId { get { return Get<int>(); } set { Set(value); } } // UserId

        [Required]
        public int RecordStatusId { get { return Get<int>(); } set { Set(value); } } // RecordStatusId

        // Foreign keys

        /// <summary>
        /// Parent Notification pointed by [Note].([NotificationId]) (FK_Note_Notification)
        /// </summary>
        public virtual Notification Notification { get; set; } // FK_Note_Notification

        /// <summary>
        /// Parent User pointed by [Note].([UserId]) (FK_Note_User)
        /// </summary>
        public virtual User User { get; set; } // FK_Note_User

        public Note()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
