// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess.Models
{
    using Mapping;

    // Transaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Transaction : Infra.Wpf.Repository.ModelBase<Transaction>
    {

        ///<summary>
        /// جدول تراکنش
        ///</summary>
        [Column(@"TransactionId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        public int TransactionId { get { return Get<int>(); } set { Set(value); } } // TransactionId (Primary key)

        [Required]
        public int Amount { get { return Get<int>(); } set { Set(value); } } // Amount

        [Required]
        public System.DateTime TransactionDate { get { return Get<System.DateTime>(); } set { Set(value); } } // TransactionDate

        [MaxLength(100)]
        [StringLength(100)]
        public string Description { get { return Get<string>(); } set { Set(value); } } // Description (length: 100)

        [Required]
        public int AccountId { get { return Get<int>(); } set { Set(value); } } // AccountId

        [Required]
        public int TypeId { get { return Get<int>(); } set { Set(value); } } // TypeId

        public int? TransferTransactionId { get { return Get<int?>(); } set { Set(value); } } // TransferTransactionId

        [Required]
        public int TransactionGroupId { get { return Get<int>(); } set { Set(value); } } // TransactionGroupId

        public int? TransactionGroupParentId { get { return Get<int?>(); } set { Set(value); } } // TransactionGroupParentId

        public int? PersonId { get { return Get<int?>(); } set { Set(value); } } // PersonId

        [Required]
        public System.DateTime CreateDate { get { return Get<System.DateTime>(); } set { Set(value); } } // CreateDate

        [Required]
        public int UserId { get { return Get<int>(); } set { Set(value); } } // UserId

        [Required]
        public int RecordStatusId { get { return Get<int>(); } set { Set(value); } } // RecordStatusId

        // Reverse navigation

        /// <summary>
        /// Child DebtDemands where [DebtDemand].[TransactionId] point to this entity (FK_DebtDemand_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DebtDemand> DebtDemands { get; set; } // DebtDemand.FK_DebtDemand_Transaction
        /// <summary>
        /// Child Installments where [Installment].[TransactionId] point to this entity (FK_Installment_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Installment> Installments { get; set; } // Installment.FK_Installment_Transaction
        /// <summary>
        /// Child Loans where [Loan].[TransactionId] point to this entity (FK_Loan_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Loan> Loans { get; set; } // Loan.FK_Loan_Transaction
        /// <summary>
        /// Child SettleDebtDemands where [SettleDebtDemand].[TransactionId] point to this entity (FK_SettleDebtDemand_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SettleDebtDemand> SettleDebtDemands { get; set; } // SettleDebtDemand.FK_SettleDebtDemand_Transaction
        /// <summary>
        /// Child Transactions where [Transaction].[TransferTransactionId] point to this entity (FK_TransferTransaction_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Transaction> Transactions { get; set; } // Transaction.FK_TransferTransaction_Transaction
        /// <summary>
        /// Child TransactionLabels where [TransactionLabel].[TransactionId] point to this entity (FK_TransactionLabel_Transaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TransactionLabel> TransactionLabels { get; set; } // TransactionLabel.FK_TransactionLabel_Transaction

        // Foreign keys

        /// <summary>
        /// Parent Account pointed by [Transaction].([AccountId]) (FK_Transaction_Account)
        /// </summary>
        public virtual Account Account { get; set; } // FK_Transaction_Account

        /// <summary>
        /// Parent Person pointed by [Transaction].([PersonId]) (FK_Transaction_Person)
        /// </summary>
        public virtual Person Person { get; set; } // FK_Transaction_Person

        /// <summary>
        /// Parent Transaction pointed by [Transaction].([TransferTransactionId]) (FK_TransferTransaction_Transaction)
        /// </summary>
        public virtual Transaction TransferTransaction { get; set; } // FK_TransferTransaction_Transaction

        /// <summary>
        /// Parent TransactionGroup pointed by [Transaction].([TransactionGroupId]) (FK_Transaction_TransactionGroup)
        /// </summary>
        public virtual TransactionGroup TransactionGroup_TransactionGroupId { get; set; } // FK_Transaction_TransactionGroup

        /// <summary>
        /// Parent TransactionGroup pointed by [Transaction].([TransactionGroupParentId]) (FK_Transaction_TransactionGroup_Parent)
        /// </summary>
        public virtual TransactionGroup TransactionGroupParent { get; set; } // FK_Transaction_TransactionGroup_Parent

        /// <summary>
        /// Parent User pointed by [Transaction].([UserId]) (FK_Transaction_User)
        /// </summary>
        public virtual User User { get; set; } // FK_Transaction_User

        public Transaction()
        {
            DebtDemands = new System.Collections.Generic.List<DebtDemand>();
            Installments = new System.Collections.Generic.List<Installment>();
            Loans = new System.Collections.Generic.List<Loan>();
            SettleDebtDemands = new System.Collections.Generic.List<SettleDebtDemand>();
            Transactions = new System.Collections.Generic.List<Transaction>();
            TransactionLabels = new System.Collections.Generic.List<TransactionLabel>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
