// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess.Models
{
    using Mapping;

    // DebtDemand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class DebtDemand : Infra.Wpf.Repository.ModelBase<DebtDemand>
    {

        ///<summary>
        /// جدول بدهی و طلب
        ///</summary>
        [Column(@"DebtDemandId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        public int DebtDemandId { get { return Get<int>(); } set { Set(value); } } // DebtDemandId (Primary key)

        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "عنوان")]
        public string Title { get { return Get<string>(); } set { Set(value); } } // Title (length: 50)

        [Required]
        [Display(Name = "مبلغ")]
        public int Amount { get { return Get<int>(); } set { Set(value); } } // Amount

        [Required]
        [Display(Name = "نوع")]
        public int TypeId { get { return Get<int>(); } set { Set(value); } } // TypeId

        [Required]
        [Display(Name = "تاریخ")]
        public System.DateTime DebtDemandDate { get { return Get<System.DateTime>(); } set { Set(value); } } // DebtDemandDate

        [Display(Name = "تاریخ سررسید")]
        public System.DateTime? DueDate { get { return Get<System.DateTime?>(); } set { Set(value); } } // DueDate

        public int? TransactionId { get { return Get<int?>(); } set { Set(value); } } // TransactionId

        public int? PersonId { get { return Get<int?>(); } set { Set(value); } } // PersonId

        public int? NotificationId { get { return Get<int?>(); } set { Set(value); } } // NotificationId

        [Required]
        [Display(Name = "وضعیت پرداخت")]
        public int SettledStatusId { get { return Get<int>(); } set { Set(value); } } // SettledStatusId

        [Required]
        [Display(Name = "مبلغ تسویه شده")]
        public int PaidAmount { get { return Get<int>(); } set { Set(value); } } // PaidAmount

        [Required]
        public int UnpaidAmount { get { return Get<int>(); } set { Set(value); } } // UnpaidAmount

        [Required]
        public int UserId { get { return Get<int>(); } set { Set(value); } } // UserId

        [Required]
        [Display(Name = "وضعیت")]
        public int RecordStatusId { get { return Get<int>(); } set { Set(value); } } // RecordStatusId

        [Required]
        [Display(Name = "تاریخ ایجاد")]
        public System.DateTime CreateDate { get { return Get<System.DateTime>(); } set { Set(value); } } // CreateDate

        // Reverse navigation

        /// <summary>
        /// Child DebtDemandLabels where [DebtDemandLabel].[DebtDemandId] point to this entity (FK_DebtDemandLabel_DebtDemand)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DebtDemandLabel> DebtDemandLabels { get; set; } // DebtDemandLabel.FK_DebtDemandLabel_DebtDemand
        /// <summary>
        /// Child SettleDebtDemands where [SettleDebtDemand].[DebtDemandId] point to this entity (FK_SettleDebtDemand_DebtDemand)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SettleDebtDemand> SettleDebtDemands { get; set; } // SettleDebtDemand.FK_SettleDebtDemand_DebtDemand

        // Foreign keys

        /// <summary>
        /// Parent Notification pointed by [DebtDemand].([NotificationId]) (FK_DebtDemand_Notification)
        /// </summary>
        public virtual Notification Notification { get; set; } // FK_DebtDemand_Notification

        /// <summary>
        /// Parent Person pointed by [DebtDemand].([PersonId]) (FK_DebtDemand_Person)
        /// </summary>
        public virtual Person Person { get; set; } // FK_DebtDemand_Person

        /// <summary>
        /// Parent Transaction pointed by [DebtDemand].([TransactionId]) (FK_DebtDemand_Transaction)
        /// </summary>
        public virtual Transaction Transaction { get; set; } // FK_DebtDemand_Transaction

        /// <summary>
        /// Parent User pointed by [DebtDemand].([UserId]) (FK_DebtDemand_User)
        /// </summary>
        public virtual User User { get; set; } // FK_DebtDemand_User

        public DebtDemand()
        {
            PaidAmount = 0;
            UnpaidAmount = 0;
            DebtDemandLabels = new System.Collections.Generic.List<DebtDemandLabel>();
            SettleDebtDemands = new System.Collections.Generic.List<SettleDebtDemand>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
