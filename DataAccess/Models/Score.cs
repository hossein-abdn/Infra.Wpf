// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Models
{
    using DataAccess.Mappings;

    // Score
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Score
    {
        public int ScoreId { get; set; } // ScoreId (Primary key)
        public int ScoreItemId { get; set; } // ScoreItemId

        ///<summary>
        /// غیر اجباری به دلیل آیتم معدل
        ///</summary>
        public int? ClassId { get; set; } // ClassId
        public int StudentId { get; set; } // StudentId
        public int Score_ { get; set; } // Score
        public int TermId { get; set; } // TermId
        public int RecordStatusId { get; set; } // RecordStatusId

        // Foreign keys

        /// <summary>
        /// Parent Class pointed by [Score].([ClassId]) (FK_Score_Class)
        /// </summary>
        public virtual Class Class { get; set; } // FK_Score_Class
        /// <summary>
        /// Parent GeneralBaseType pointed by [Score].([RecordStatusId]) (FK_Score_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType GeneralBaseType { get; set; } // FK_Score_GeneralBaseType
        /// <summary>
        /// Parent ScoreItem pointed by [Score].([ScoreItemId]) (FK_Score_ScoreItem)
        /// </summary>
        public virtual ScoreItem ScoreItem { get; set; } // FK_Score_ScoreItem
        /// <summary>
        /// Parent Student pointed by [Score].([StudentId]) (FK_Score_Student)
        /// </summary>
        public virtual Student Student { get; set; } // FK_Score_Student
        /// <summary>
        /// Parent Term pointed by [Score].([TermId]) (FK_Score_Term)
        /// </summary>
        public virtual Term Term { get; set; } // FK_Score_Term
    }

}
// </auto-generated>
