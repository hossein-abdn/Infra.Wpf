// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Models
{
    using DataAccess.Mappings;

    // Permission
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class Permission
    {
        public int PermissionId { get; set; } // PermissionId (Primary key)

        ///<summary>
        /// عنوان دسترسی
        ///</summary>
        public string Title { get; set; } // Title (length: 50)

        ///<summary>
        /// آدرس دسترسی
        ///</summary>
        public string Uri { get; set; } // Uri

        ///<summary>
        /// نوع دسترسی (فرم، دکمه، کلاس)
        ///</summary>
        public int PermitionTypeId { get; set; } // PermitionTypeId
        public int? ParentPermissionId { get; set; } // ParentPermissionId

        // Reverse navigation

        /// <summary>
        /// Child Permissions where [Permission].[ParentPermissionId] point to this entity (FK_Permission_Permission)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Permission> Permissions { get; set; } // Permission.FK_Permission_Permission
        /// <summary>
        /// Child RolePermissions where [RolePermission].[PermissionId] point to this entity (FK_RolePermission_Permission)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RolePermission> RolePermissions { get; set; } // RolePermission.FK_RolePermission_Permission
        /// <summary>
        /// Child UserPermissions where [UserPermission].[PermissionId] point to this entity (FK_UserPermission_Permission)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UserPermission> UserPermissions { get; set; } // UserPermission.FK_UserPermission_Permission

        // Foreign keys

        /// <summary>
        /// Parent GeneralBaseType pointed by [Permission].([PermitionTypeId]) (FK_Permission_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType GeneralBaseType { get; set; } // FK_Permission_GeneralBaseType
        /// <summary>
        /// Parent Permission pointed by [Permission].([ParentPermissionId]) (FK_Permission_Permission)
        /// </summary>
        public virtual Permission ParentPermission { get; set; } // FK_Permission_Permission

        public Permission()
        {
            Permissions = new System.Collections.Generic.List<Permission>();
            RolePermissions = new System.Collections.Generic.List<RolePermission>();
            UserPermissions = new System.Collections.Generic.List<UserPermission>();
        }
    }

}
// </auto-generated>
