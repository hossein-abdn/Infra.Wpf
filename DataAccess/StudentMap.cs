// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess
{

    // Student
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class StudentMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Student>
    {
        public StudentMap()
            : this("dbo")
        {
        }

        public StudentMap(string schema)
        {
            ToTable("Student", schema);
            Property(x => x.StudentId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar");
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar");
            Property(x => x.Birthday).HasColumnName(@"Birthday").HasColumnType("date").IsOptional();
            Property(x => x.NationalCode).HasColumnName(@"NationalCode").HasColumnType("int").IsOptional();
            Property(x => x.IdentifiereNo).HasColumnName(@"IdentifiereNo").HasColumnType("int").IsOptional();
            Property(x => x.Picture).HasColumnName(@"Picture").HasColumnType("image").IsOptional();
            Property(x => x.BasijStatusId).HasColumnName(@"BasijStatusId").HasColumnType("int").IsOptional();
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").IsOptional();
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional();
            Property(x => x.RecordStatusId).HasColumnName(@"RecordStatusId").HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.BasijStatus).WithMany(b => b.BasijStatus).HasForeignKey(c => c.BasijStatusId).WillCascadeOnDelete(false); // FK_Student_GeneralBaseType
            HasRequired(a => a.RecordStatus).WithMany(b => b.Students_RecordStatusId).HasForeignKey(c => c.RecordStatusId).WillCascadeOnDelete(false); // FK_Student_GeneralBaseType1
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
