// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess
{

    // Register
    ///<summary>
    /// جدول ثبت نام ترم
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Register
    {
        [Column(@"RegisterId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        public int RegisterId { get; set; } // RegisterId (Primary key)

        [Required]
        public int TermId { get; set; } // TermId

        [Required]
        public int StudentId { get; set; } // StudentId

        ///<summary>
        /// نوع معدل (ترمی، پایانی)
        ///</summary>
        public int? AverageTypeId { get; set; } // AverageTypeId

        ///<summary>
        /// معدل
        ///</summary>
        public decimal? Average { get; set; } // Average

        ///<summary>
        /// نام مدرسه فعلی
        ///</summary>
        [MaxLength(30)]
        [StringLength(30)]
        public string CurrentSchoolName { get; set; } // CurrentSchoolName (length: 30)

        ///<summary>
        /// نام مدرسه سال آینده
        ///</summary>
        [MaxLength(30)]
        [StringLength(30)]
        public string NextSchoolName { get; set; } // NextSchoolName (length: 30)

        ///<summary>
        /// آماده میزبانی هیئت
        ///</summary>
        [Required]
        public bool HostReligiousMission { get; set; } // HostReligiousMission

        [Required]
        public int RecordStatusId { get; set; } // RecordStatusId

        // Reverse navigation

        /// <summary>
        /// Child RegisterQuestions where [RegisterQuestion].[RegisterId] point to this entity (FK_RegisterQuestion_Register)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RegisterQuestion> RegisterQuestions { get; set; } // RegisterQuestion.FK_RegisterQuestion_Register

        // Foreign keys

        /// <summary>
        /// Parent GeneralBaseType pointed by [Register].([AverageTypeId]) (FK_Register_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType AverageType { get; set; } // FK_Register_GeneralBaseType

        /// <summary>
        /// Parent GeneralBaseType pointed by [Register].([RecordStatusId]) (FK_Register_GeneralBaseType1)
        /// </summary>
        public virtual GeneralBaseType RecordStatus { get; set; } // FK_Register_GeneralBaseType1

        /// <summary>
        /// Parent Student pointed by [Register].([StudentId]) (FK_Register_Student)
        /// </summary>
        public virtual Student Student { get; set; } // FK_Register_Student

        /// <summary>
        /// Parent Term pointed by [Register].([TermId]) (FK_Register_Term)
        /// </summary>
        public virtual Term Term { get; set; } // FK_Register_Term

        public Register()
        {
            HostReligiousMission = false;
            RegisterQuestions = new System.Collections.Generic.List<RegisterQuestion>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
