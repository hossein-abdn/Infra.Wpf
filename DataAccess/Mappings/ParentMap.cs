// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Mappings
{
    using DataAccess.Models;

    // Parent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class ParentMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Parent>
    {
        public ParentMap()
            : this("dbo")
        {
        }

        public ParentMap(string schema)
        {
            ToTable("Parent", schema);
            HasKey(x => x.ParentId);

            Property(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Job).HasColumnName(@"Job").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.AssistantContext).HasColumnName(@"AssistantContext").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.StudentId).HasColumnName(@"StudentId").HasColumnType("int").IsRequired();
            Property(x => x.WithoutParent).HasColumnName(@"WithoutParent").HasColumnType("bit").IsRequired();
            Property(x => x.RelationshipId).HasColumnName(@"RelationshipId").HasColumnType("int").IsRequired();
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.RecordStatusId).HasColumnName(@"RecordStatusId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RecordStatus).WithMany(b => b.Parents_RecordStatusId).HasForeignKey(c => c.RecordStatusId).WillCascadeOnDelete(false); // FK_Parent_GeneralBaseType1
            HasRequired(a => a.Relationship).WithMany(b => b.Relationship).HasForeignKey(c => c.RelationshipId).WillCascadeOnDelete(false); // FK_Parent_GeneralBaseType
            HasRequired(a => a.Student).WithMany(b => b.Parents).HasForeignKey(c => c.StudentId).WillCascadeOnDelete(false); // FK_Parent_Student
        }
    }

}
// </auto-generated>
