// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Mappings
{
    using DataAccess.Models;

    // Teacher
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class TeacherMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Teacher>
    {
        public TeacherMap()
            : this("dbo")
        {
        }

        public TeacherMap(string schema)
        {
            ToTable("Teacher", schema);
            HasKey(x => x.TeacherId);

            Property(x => x.TeacherId).HasColumnName(@"TeacherId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsRequired().HasMaxLength(30);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Picture).HasColumnName(@"Picture").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.NationalCode).HasColumnName(@"NationalCode").HasColumnType("int").IsOptional();
            Property(x => x.IdentifierNo).HasColumnName(@"IdentifierNo").HasColumnType("int").IsOptional();
            Property(x => x.FatherName).HasColumnName(@"FatherName").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.BasijStatusId).HasColumnName(@"BasijStatusId").HasColumnType("int").IsOptional();
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.DegreeId).HasColumnName(@"DegreeId").HasColumnType("int").IsOptional();
            Property(x => x.FieldStudy).HasColumnName(@"FieldStudy").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Resume).HasColumnName(@"Resume").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Birthday).HasColumnName(@"Birthday").HasColumnType("date").IsOptional();
            Property(x => x.RecordStatusId).HasColumnName(@"RecordStatusId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.BasijStatus).WithMany(b => b.BasijStatusId).HasForeignKey(c => c.BasijStatusId).WillCascadeOnDelete(false); // FK_Teacher_GeneralBaseType
            HasOptional(a => a.Degree).WithMany(b => b.Degree).HasForeignKey(c => c.DegreeId).WillCascadeOnDelete(false); // FK_Teacher_GeneralBaseType1
            HasRequired(a => a.RecordStatus).WithMany(b => b.Teachers_RecordStatusId).HasForeignKey(c => c.RecordStatusId).WillCascadeOnDelete(false); // FK_Teacher_GeneralBaseType2
        }
    }

}
// </auto-generated>
