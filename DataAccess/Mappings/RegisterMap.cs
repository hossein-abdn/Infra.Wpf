// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Mappings
{
    using DataAccess.Models;

    // Register
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class RegisterMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Register>
    {
        public RegisterMap()
            : this("dbo")
        {
        }

        public RegisterMap(string schema)
        {
            ToTable("Register", schema);
            HasKey(x => x.RegisterId);

            Property(x => x.RegisterId).HasColumnName(@"RegisterId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TermId).HasColumnName(@"TermId").HasColumnType("int").IsRequired();
            Property(x => x.StudentId).HasColumnName(@"StudentId").HasColumnType("int").IsRequired();
            Property(x => x.AverageTypeId).HasColumnName(@"AverageTypeId").HasColumnType("int").IsOptional();
            Property(x => x.Average).HasColumnName(@"Average").HasColumnType("decimal").IsOptional().HasPrecision(4,2);
            Property(x => x.CurrentSchoolName).HasColumnName(@"CurrentSchoolName").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.NextSchoolName).HasColumnName(@"NextSchoolName").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.HostReligiousMission).HasColumnName(@"HostReligiousMission").HasColumnType("bit").IsRequired();
            Property(x => x.RecordStatusId).HasColumnName(@"RecordStatusId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.AverageType).WithMany(b => b.AverageType).HasForeignKey(c => c.AverageTypeId).WillCascadeOnDelete(false); // FK_Register_GeneralBaseType
            HasRequired(a => a.RecordStatus).WithMany(b => b.Registers_RecordStatusId).HasForeignKey(c => c.RecordStatusId).WillCascadeOnDelete(false); // FK_Register_GeneralBaseType1
            HasRequired(a => a.Student).WithMany(b => b.Registers).HasForeignKey(c => c.StudentId).WillCascadeOnDelete(false); // FK_Register_Student
            HasRequired(a => a.Term).WithMany(b => b.Registers).HasForeignKey(c => c.TermId).WillCascadeOnDelete(false); // FK_Register_Term
        }
    }

}
// </auto-generated>
