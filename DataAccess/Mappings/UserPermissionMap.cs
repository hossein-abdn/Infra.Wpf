// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataAccess.Mappings
{
    using DataAccess.Models;

    // UserPermission
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.29.1.0")]
    public class UserPermissionMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserPermission>
    {
        public UserPermissionMap()
            : this("dbo")
        {
        }

        public UserPermissionMap(string schema)
        {
            ToTable("UserPermission", schema);
            HasKey(x => x.UserPermissionId);

            Property(x => x.UserPermissionId).HasColumnName(@"UserPermissionId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsOptional();
            Property(x => x.PermissionId).HasColumnName(@"PermissionId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Permission).WithMany(b => b.UserPermissions).HasForeignKey(c => c.PermissionId).WillCascadeOnDelete(false); // FK_UserPermission_Permission
            HasOptional(a => a.User).WithMany(b => b.UserPermissions).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_UserPermission_User
        }
    }

}
// </auto-generated>
