// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess.Mapping
{
    using Models;

    // LoanLabel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class LoanLabelMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LoanLabel>
    {
        public LoanLabelMap()
            : this("dbo")
        {
        }

        public LoanLabelMap(string schema)
        {
            ToTable("LoanLabel", schema);
            Property(x => x.LoanLabelId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.LoanId).HasColumnName(@"LoanId").HasColumnType("int");
            Property(x => x.LabelId).HasColumnName(@"LabelId").HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Label).WithMany(b => b.LoanLabels).HasForeignKey(c => c.LabelId).WillCascadeOnDelete(false); // FK_LoanLabel_Label
            HasRequired(a => a.Loan).WithMany(b => b.LoanLabels).HasForeignKey(c => c.LoanId).WillCascadeOnDelete(false); // FK_LoanLabel_Loan
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
