// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess
{

    // Account
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class AccountMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Account>
    {
        public AccountMap()
            : this("dbo")
        {
        }

        public AccountMap(string schema)
        {
            ToTable("Account", schema);
            Property(x => x.AcountId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.TermId).HasColumnName(@"TermId").HasColumnType("int");
            Property(x => x.BillDate).HasColumnName(@"BillDate").HasColumnType("date");
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar");
            Property(x => x.Count).HasColumnName(@"Count").HasColumnType("int").IsOptional();
            Property(x => x.BaseCharge).HasColumnName(@"BaseCharge").HasColumnType("int").IsOptional();
            Property(x => x.Creditor).HasColumnName(@"Creditor").HasColumnType("int").IsOptional();
            Property(x => x.Debtor).HasColumnName(@"Debtor").HasColumnType("int").IsOptional();
            Property(x => x.IsDetailed).HasColumnName(@"IsDetailed").HasColumnType("bit");
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
