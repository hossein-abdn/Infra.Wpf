// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DebugMode
{

    // Group
    ///<summary>
    /// جدول گروه ها
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Group
    {
        [Column(@"GroupId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Group ID")]
        public int GroupId { get; set; } // GroupId (Primary key)

        [Required]
        [Display(Name = "Term ID")]
        public int TermId { get; set; } // TermId

        [Required]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 30)

        [Required]
        [Display(Name = "Record status ID")]
        public int RecordStatusId { get; set; } // RecordStatusId

        // Reverse navigation

        /// <summary>
        /// Child Classes where [Class].[GroupId] point to this entity (FK_Class_Group)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Class> Classes { get; set; } // Class.FK_Class_Group
        /// <summary>
        /// Child GroupStudents where [GroupStudent].[GroupId] point to this entity (FK_GroupStudent_GroupStudent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<GroupStudent> GroupStudents { get; set; } // GroupStudent.FK_GroupStudent_GroupStudent

        // Foreign keys

        /// <summary>
        /// Parent GeneralBaseType pointed by [Group].([RecordStatusId]) (FK_Group_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType GeneralBaseType { get; set; } // FK_Group_GeneralBaseType

        /// <summary>
        /// Parent Term pointed by [Group].([TermId]) (FK_Group_Term)
        /// </summary>
        public virtual Term Term { get; set; } // FK_Group_Term

        public Group()
        {
            Classes = new System.Collections.Generic.List<Class>();
            GroupStudents = new System.Collections.Generic.List<GroupStudent>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
