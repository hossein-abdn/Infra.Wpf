// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DebugMode
{

    // Document
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class DocumentMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Document>
    {
        public DocumentMap()
            : this("dbo")
        {
        }

        public DocumentMap(string schema)
        {
            ToTable("Document", schema);
            Property(x => x.DocumentId).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.RootId).HasColumnName(@"RootId").HasColumnType("int");
            Property(x => x.DocumentTypeId).HasColumnName(@"DocumentTypeId").HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar");
            Property(x => x.ExtensionTypeId).HasColumnName(@"ExtensionTypeId").HasColumnType("int");
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Date).HasColumnName(@"Date").HasColumnType("date").IsOptional();
            Property(x => x.RegisterDate).HasColumnName(@"RegisterDate").HasColumnType("date");
            Property(x => x.Path).HasColumnName(@"Path").HasColumnType("nvarchar(max)");
            Property(x => x.SaveSourcePath).HasColumnName(@"SaveSourcePath").HasColumnType("nvarchar").IsOptional();
            Property(x => x.RecordStatusId).HasColumnName(@"RecordStatusId").HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.DocumentType).WithMany(b => b.DocumentType).HasForeignKey(c => c.DocumentTypeId).WillCascadeOnDelete(false); // FK_Document_GeneralBaseType1
            HasRequired(a => a.ExtensionType).WithMany(b => b.ExtensionType).HasForeignKey(c => c.ExtensionTypeId).WillCascadeOnDelete(false); // FK_Document_GeneralBaseType2
            HasRequired(a => a.RecordStatus).WithMany(b => b.Documents_RecordStatusId).HasForeignKey(c => c.RecordStatusId).WillCascadeOnDelete(false); // FK_Document_GeneralBaseType3
            HasRequired(a => a.Root).WithMany(b => b.Root).HasForeignKey(c => c.RootId).WillCascadeOnDelete(false); // FK_Document_GeneralBaseType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
