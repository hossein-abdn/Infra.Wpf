// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DebugMode
{

    // StudentAward
    ///<summary>
    /// جدول انتخاب جوایز دانش آموزان
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class StudentAward
    {
        [Column(@"StudentAwardId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Student award ID")]
        public int StudentAwardId { get; set; } // StudentAwardId (Primary key)

        [Required]
        [Display(Name = "Student ID")]
        public int StudentId { get; set; } // StudentId

        [Required]
        [Display(Name = "Award ID")]
        public int AwardId { get; set; } // AwardId

        [Required]
        [Display(Name = "Term ID")]
        public int TermId { get; set; } // TermId

        [Required]
        [Display(Name = "Award score ID")]
        public int AwardScoreId { get; set; } // AwardScoreId

        [Required]
        [Display(Name = "Record status ID")]
        public int RecordStatusId { get; set; } // RecordStatusId

        // Foreign keys

        /// <summary>
        /// Parent Award pointed by [StudentAward].([AwardId]) (FK_StudentAward_Award)
        /// </summary>
        public virtual Award Award { get; set; } // FK_StudentAward_Award

        /// <summary>
        /// Parent AwardScore pointed by [StudentAward].([AwardScoreId]) (FK_StudentAward_AwardScore)
        /// </summary>
        public virtual AwardScore AwardScore { get; set; } // FK_StudentAward_AwardScore

        /// <summary>
        /// Parent GeneralBaseType pointed by [StudentAward].([RecordStatusId]) (FK_StudentAward_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType GeneralBaseType { get; set; } // FK_StudentAward_GeneralBaseType

        /// <summary>
        /// Parent Student pointed by [StudentAward].([StudentId]) (FK_StudentAward_Student)
        /// </summary>
        public virtual Student Student { get; set; } // FK_StudentAward_Student

        /// <summary>
        /// Parent Term pointed by [StudentAward].([TermId]) (FK_StudentAward_Term)
        /// </summary>
        public virtual Term Term { get; set; } // FK_StudentAward_Term

        public StudentAward()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
