// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataAccess
{

    // PhoneNumber
    ///<summary>
    /// جد.ل شماره تلفن
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class PhoneNumber
    {
        [Column(@"PhoneNumberId", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        public int PhoneNumberId { get; set; } // PhoneNumberId (Primary key)

        public int? StudentId { get; set; } // StudentId

        public int? ParentId { get; set; } // ParentId

        public int? TeacherId { get; set; } // TeacherId

        ///<summary>
        /// شماره تلفن متعلق به کیست (معلم، دانش آموز، والدین)
        ///</summary>
        [Required]
        public int OwnerId { get; set; } // OwnerId

        [Required]
        public int PhoneNumber_ { get; set; } // PhoneNumber

        ///<summary>
        /// خانه، کار، موبایل
        ///</summary>
        [Required]
        public int PhoneNumberTypeId { get; set; } // PhoneNumberTypeId

        [Required]
        public int RecordStatusId { get; set; } // RecordStatusId

        // Foreign keys

        /// <summary>
        /// Parent GeneralBaseType pointed by [PhoneNumber].([OwnerId]) (FK_PhoneNumber_GeneralBaseType)
        /// </summary>
        public virtual GeneralBaseType Owner { get; set; } // FK_PhoneNumber_GeneralBaseType

        /// <summary>
        /// Parent GeneralBaseType pointed by [PhoneNumber].([PhoneNumberTypeId]) (FK_PhoneNumber_GeneralBaseType1)
        /// </summary>
        public virtual GeneralBaseType PhoneNumberType { get; set; } // FK_PhoneNumber_GeneralBaseType1

        /// <summary>
        /// Parent GeneralBaseType pointed by [PhoneNumber].([RecordStatusId]) (FK_PhoneNumber_GeneralBaseType2)
        /// </summary>
        public virtual GeneralBaseType RecordStatus { get; set; } // FK_PhoneNumber_GeneralBaseType2

        /// <summary>
        /// Parent Parent pointed by [PhoneNumber].([ParentId]) (FK_PhoneNumber_Parent)
        /// </summary>
        public virtual Parent Parent { get; set; } // FK_PhoneNumber_Parent

        /// <summary>
        /// Parent Student pointed by [PhoneNumber].([StudentId]) (FK_PhoneNumber_Student)
        /// </summary>
        public virtual Student Student { get; set; } // FK_PhoneNumber_Student

        /// <summary>
        /// Parent Teacher pointed by [PhoneNumber].([TeacherId]) (FK_PhoneNumber_Teacher)
        /// </summary>
        public virtual Teacher Teacher { get; set; } // FK_PhoneNumber_Teacher

        public PhoneNumber()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
